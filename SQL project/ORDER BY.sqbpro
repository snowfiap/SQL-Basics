<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ELCOT/Desktop/SQL Exercise files/Ex_Files_Learning_SQL_Prog/Exercise Files/SQLite/quizdata.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1711"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainpeople"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="people" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="76"/><column index="2" value="78"/><column index="3" value="78"/><column index="4" value="106"/><column index="5" value="82"/><column index="6" value="90"/><column index="7" value="82"/><column index="8" value="96"/><column index="9" value="73"/><column index="10" value="40"/><column index="11" value="223"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="states" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="97"/><column index="2" value="97"/><column index="3" value="62"/><column index="4" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="JOINS (1)">		--Joins in SQL - Used to join two or more tables together based on a single related field--
-- EXPLICIT JOIN --
SELECT *
FROM people
JOIN states ON people.state_code=states.state_abbrev;--It returns the whole people table with the matched field in the states table--

 SELECT people.first_name,people.last_name,states.division
FROM people
JOIN states ON people.state_code=states.state_abbrev;--It joins the people table with the state_abbrev on the states table--

--Applying conditions in Joins--
SELECT *
FROM people
JOIN states ON people.state_code=states.state_abbrev
WHERE people.first_name LIKE 'J%' AND states.region='South';
--It returns the people table with the first_name starting with J and the states table with South region along with the remaining fields in both the table--

-- IMPLICIT JOIN --
SELECT people.first_name,states.state_abbrev
FROM people,states
WHERE people.state_code=states.state_abbrev;--join function takes place without uing the join keyword--

--we can also use nickaname if the table name is long--
SELECT ppl.first_name,ppl.last_name,st.region
FROM people ppl,states st
WHERE ppl.state_code=st.state_abbrev;

-- you can change the left and right join by swapping the table name--
SELECT ppl.first_name,ppl.last_name,st.region
FROM people ppl
JOIN states st ON ppl.state_code=st.state_abbrev;

--changing the table name to change the left and right join--
SELECT ppl.first_name,ppl.last_name,st.region
FROM  states st
JOIN people ppl ON ppl.state_code=st.state_abbrev;

SELECT DISTINCT(people.state_code),states.state_abbrev
FROM states 
LEFT JOIN people ON people.state_code=states.state_abbrev
ORDER BY people.state_code;
--State table as a whole is combined with the people table here the people table consists of only the data which matches with the states table-- 









	
		</sql><sql name="GROUP BY">SELECT first_name,COUNT(first_name)
FROM people;</sql><current_tab id="1"/></tab_sql></sqlb_project>
