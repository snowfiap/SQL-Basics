<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/ELCOT/Desktop/SQL Exercise files/Ex_Files_Learning_SQL_Prog/Exercise Files/SQLite/quizdata.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1711"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainpeople"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="people" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="76"/><column index="2" value="78"/><column index="3" value="78"/><column index="4" value="106"/><column index="5" value="82"/><column index="6" value="90"/><column index="7" value="82"/><column index="8" value="96"/><column index="9" value="73"/><column index="10" value="40"/><column index="11" value="223"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="states" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="97"/><column index="2" value="97"/><column index="3" value="62"/><column index="4" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="WHERE and some criteria">		--WHERE keyword is used to add  a condition to the SELECT statement--
--To get the rows which has statecode as CA using a condition we retrieve it --
SELECT * FROM people WHERE state_code='CA';
SELECT * FROM people WHERE state_code='FL';

--changing the fields--
SELECT * FROM people WHERE city='Miami';

--can also select specific rows while applying condiion it should be in the same order as below --
SELECT first_name,last_name,city
FROM people 
WHERE shirt_or_hat='shirt';

-- Adding more criteria to statements--
--Using logical operators--
SELECT first_name,last_name,team
FROM people 
WHERE shirt_or_hat='shirt' AND team='Angry Ants' AND state_code='CA';

-- In this we use an OR operator to display both the statecode values and return those in shirt and in team Angry Ants--
SELECT first_name,last_name,team,state_code,state_code
FROM people 
WHERE (state_code='CA' OR state_code='WA') AND shirt_or_hat='shirt' AND team='Angry Ants';

--we can also use not operation to display the rows which have state_code other tha WA --
SELECT first_name,last_name,team,state_code
FROM people 
WHERE shirt_or_hat='shirt' AND team='Angry Ants' AND state_code!='WA';







</sql><sql name="SELECT">		--SELECT keyword is used to collect information from the database--
--printing statement using SELECT statement--
SELECT 'Hello World!';

--selecting a particular field using SELECT--
SELECT first_name FROM people;

--selecting another field--
SELECT team FROM people;

--selecting multiple fields using a single statement--
SELECT state_code,team FROM people;
SELECT first_name,last_name FROM people;

--to select the entire table using the SELECT table--
SELECT * FROM people;



</sql><sql name="Broading and limiting responses (1)">	--LIKE is used along with % character it represents the portion of the string to ignore--
-- To find city whose name starts with B can be retrieved using this --
SELECT * FROM people 
WHERE city LIKE 'B%';

---- To find state_code which has A  can be retrieved using this --
SELECT * FROM people 
WHERE state_code LIKE '%A';-- Note the % symbol is changed o the right of character--

--To get the first_name which starts with J--
SELECT * FROM people 
WHERE first_name LIKE 'J%';

--To get the first_name which has on in it--
SELECT * FROM people 
WHERE first_name LIKE '%ON';

--To get the first_name which has j in it note id_number 594 it returns the first_name which has J in it--
SELECT * FROM people 
WHERE first_name LIKE '%J%';

--To get the first_name which starts with B and ends with N --
SELECT first_name,last_name FROM people 
WHERE first_name LIKE 'B%N';

--To get company which ends with LLC--
SELECT first_name,last_name,company FROM people 
WHERE company LIKE '%LLC';

--LIMIT keyword is used to limit the number of entries--
--To get the field of first name which starts with E and to limit it with 10 values--
SELECT first_name,last_name FROM people
WHERE first_name  LIKE 'E%' 
LIMIT 10;

--To get the company field which end LLC and limit the values with 5--\
SELECT first_name,last_name,company FROM people
WHERE  company LIKE '%LLC'
LIMIT 5;

--To get the company values of the value from 6 to 10 we can use OFFSET kaeyword--
SELECT first_name,last_name,company FROM people 
WHERE company LIKE '%LLC'
LIMIT 5 OFFSET 5;






</sql><sql name="ORDERBY">		--Sort the results of the query--
SELECT first_name,last_name,company FROM people
WHERE first_name LIKE '%S'
ORDER BY last_name;--here the query is displayed by ordered lastname in alphabetical order that too in ascending--

SELECT first_name,last_name,team FROM people
WHERE team LIKE 'A%'
ORDER BY team;

SELECT first_name,last_name,state_code FROM people
WHERE state_code LIKE '%A'
ORDER BY state_code;

SELECT first_name,last_name,team FROM people 
WHERE team LIKE '%S'
ORDER BY team;

--To get the field in descending order--
SELECT first_name,last_name,team FROM people 
WHERE team LIKE '%S'
ORDER BY last_name DESC;--The last_name is displayed in desending order--

SELECT first_name,last_name,team FROM people 
WHERE team LIKE '%S'
ORDER BY first_name DESC;--The first_name is displayed in desending order--

SELECT first_name,last_name,state_code FROM people 
WHERE state_code LIKE '%A'
ORDER BY team DESC;--The team is displayed in desending order--

SELECT first_name,last_name,team FROM people 
WHERE team LIKE '%S'
ORDER BY first_name DESC; --The first_name is displayed in desending order--














 
</sql><sql name="Finding information about the data">		--The information of the fields can be retrieved as follows--
--To find the length of the field--\
SELECT state_name,LENGTH(state_name)
FROM states;--It returns the length of the state_name--

SELECT region,LENGTH(region)
FROM states;--It returns the length of the region--


--Displaying unique values--

SELECT region FROM states;--It returns 50 rows--

--To display only the unique values we can use DISTINCT keyword--
SELECT DISTINCT(region)
FROM states;--It returns only 4 values which are unique--

SELECT DISTINCT(first_name)
FROM people 
ORDER BY first_name;--we can see the first name has only the unique values as well as it is ordered in ascending order--

SELECT DISTINCT(shirt_or_hat)
FROM people; 

--we can use COUNT function to see how many records match the given criteria--

SELECT COUNT(*)
FROM people
WHERE state_code='CA';

SELECT COUNT(city)
FROM people
WHERE shirt_or_hat='hat';

SELECT COUNT(region)
FROM states; 










</sql><sql name="Finding information about the data (1)">		--The information of the fields can be retrieved as follows--
--To find the length of the field--\
SELECT state_name,LENGTH(state_name)
FROM states;--It returns the length of the state_name--

SELECT region,LENGTH(region)
FROM states;--It returns the length of the region--


--Displaying unique values--

SELECT region FROM states;--It returns 50 rows--

--To display only the unique values we can use DISTINCT keyword--
SELECT DISTINCT(region)
FROM states;--It returns only 4 values which are unique--

SELECT DISTINCT(first_name)
FROM people 
ORDER BY first_name;--we can see the first name has only the unique values as well as it is ordered in ascending order--

SELECT DISTINCT(shirt_or_hat)
FROM people; 

--we can use COUNT function to see how many records match the given criteria--

SELECT COUNT(*)
FROM people
WHERE state_code='CA';

SELECT COUNT(city)
FROM people
WHERE shirt_or_hat='hat';

SELECT COUNT(region)
FROM states; 










</sql><current_tab id="5"/></tab_sql></sqlb_project>
